Namespace(batch_size=64, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using CPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=64, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=64, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=64, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=64, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=64, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=64, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=64, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Learning rate: 0.003000
Namespace(batch_size=64, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Learning rate: 0.003000
Train 1, loss: 0.000000, train acc: nan, train ins_iou: 0.000000
Namespace(batch_size=64, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Learning rate: 0.003000
Train 1, loss: 0.000000, train acc: nan, train ins_iou: 0.000000
Namespace(batch_size=64, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Learning rate: 0.003000
Train 1, loss: 0.000000, train acc: nan, train ins_iou: 0.000000
Namespace(batch_size=64, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Learning rate: 0.003000
Train 1, loss: 0.000000, train acc: nan, train ins_iou: 0.000000
Namespace(batch_size=64, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 6, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Learning rate: 0.003000
Train 1, loss: 0.000000, train acc: nan, train ins_iou: 0.000000
Namespace(batch_size=64, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 6, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Learning rate: 0.003000
Train 1, loss: 0.000000, train acc: nan, train ins_iou: 0.000000
Namespace(batch_size=64, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 6, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Learning rate: 0.003000
Train 1, loss: 0.000000, train acc: nan, train ins_iou: 0.000000
Namespace(batch_size=64, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 6, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Learning rate: 0.003000
Train 1, loss: 0.000000, train acc: nan, train ins_iou: 0.000000
Namespace(batch_size=4, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=1, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 6, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=4, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=1, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 6, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=64, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 6, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=64, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=True, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using CPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 6, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=1, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 6, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=16, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 6, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=16, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 6, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=64, epochs=350, eval=False, exp_name='GDANet', lr=0.003, manual_seed=1, model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False)
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 6, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Namespace(exp_name='GDANet', batch_size=64, test_batch_size=32, epochs=350, use_sgd=False, scheduler='step', step=40, lr=0.003, momentum=0.9, no_cuda=False, manual_seed=1, eval=False, num_points=2048, resume=False, model_type='insiou')
Using CPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 6, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Namespace(exp_name='GDANet', batch_size=64, test_batch_size=32, epochs=350, use_sgd=False, scheduler='step', step=40, lr=0.003, momentum=0.9, no_cuda=False, manual_seed=1, eval=False, num_points=2048, resume=False, model_type='insiou')
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 6, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Namespace(exp_name='GDANet', batch_size=16, test_batch_size=32, epochs=350, use_sgd=False, scheduler='step', step=40, lr=0.003, momentum=0.9, no_cuda=False, manual_seed=1, eval=False, num_points=2048, resume=False, model_type='insiou')
Using GPU
GDANet(
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn12): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn21): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn22): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn31): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn32): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bnc): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn6): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (bn7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv1): Sequential(
    (0): Conv2d(9, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv11): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv12): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): Sequential(
    (0): Conv2d(134, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv21): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv22): Sequential(
    (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv3): Sequential(
    (0): Conv2d(262, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv31): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv32): Sequential(
    (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (convc): Sequential(
    (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv5): Sequential(
    (0): Conv1d(832, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp1): Dropout(p=0.4, inplace=False)
  (conv6): Sequential(
    (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (dp2): Dropout(p=0.4, inplace=False)
  (conv7): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv8): Conv1d(128, 6, kernel_size=(1,), stride=(1,))
  (SGCAM_1s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_1g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2s): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
  (SGCAM_2g): SGCAM(
    (g): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (W): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (theta): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
    (phi): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
  )
)
Learning rate: 0.003000
Train 1, loss: 1.325660, train acc: 0.493378, train ins_iou: 0.334983
Test 1, loss: 1.290000, test acc: 0.511200  test ins_iou: 0.352069
Max Acc:0.51120
Max instance iou:0.35207
former1 iou: 0.3318422
former2 iou: 0.33069286
former3 iou: 0.36686078
former4 iou: 0.36456132
former5 iou: 0.32903716
former6 iou: 0.36934146
former7 iou: 0.35797104
former8 iou: 0.34037223
former9 iou: 0.37824935
former10 iou: 0.3374782
former11 iou: 0.38380912
former12 iou: 0.35424286
former13 iou: 0.3594537
former14 iou: 0.33953086
former15 iou: 0.36892015
former16 iou: 0.32074788
Max class iou:0.35207
Learning rate: 0.003000
Train 2, loss: 0.372730, train acc: 0.897606, train ins_iou: 0.818920
Test 2, loss: 1.418978, test acc: 0.498901  test ins_iou: 0.342244
Learning rate: 0.003000
Train 3, loss: 0.212902, train acc: 0.925972, train ins_iou: 0.863231
Test 3, loss: 1.142696, test acc: 0.667328  test ins_iou: 0.510414
Max Acc:0.66733
Max instance iou:0.51041
former1 iou: 0.52175295
former2 iou: 0.48705685
former3 iou: 0.5177409
former4 iou: 0.5405135
former5 iou: 0.5054957
former6 iou: 0.5163195
former7 iou: 0.51028395
former8 iou: 0.5020393
former9 iou: 0.5105779
former10 iou: 0.52936375
former11 iou: 0.50587994
former12 iou: 0.48551708
former13 iou: 0.4948988
former14 iou: 0.48348933
former15 iou: 0.55168504
former16 iou: 0.50400394
Max class iou:0.51041
Learning rate: 0.003000
Train 4, loss: 0.167585, train acc: 0.935120, train ins_iou: 0.878912
Test 4, loss: 0.508205, test acc: 0.824951  test ins_iou: 0.718592
Max Acc:0.82495
Max instance iou:0.71859
former1 iou: 0.72454655
former2 iou: 0.6599689
former3 iou: 0.72177094
former4 iou: 0.71324587
former5 iou: 0.77308124
former6 iou: 0.6852051
former7 iou: 0.72970116
former8 iou: 0.7367476
former9 iou: 0.73325884
former10 iou: 0.7319122
former11 iou: 0.7289976
former12 iou: 0.7186662
former13 iou: 0.70457417
former14 iou: 0.7192363
former15 iou: 0.70807177
former16 iou: 0.7084827
Max class iou:0.71859
Learning rate: 0.003000
Train 5, loss: 0.136321, train acc: 0.945999, train ins_iou: 0.894867
Test 5, loss: 0.334946, test acc: 0.869873  test ins_iou: 0.808919
Max Acc:0.86987
Max instance iou:0.80892
former1 iou: 0.82502854
former2 iou: 0.8388709
former3 iou: 0.7991814
former4 iou: 0.8034843
former5 iou: 0.8386984
former6 iou: 0.7872537
former7 iou: 0.7965788
former8 iou: 0.8347357
former9 iou: 0.80792844
former10 iou: 0.79430336
former11 iou: 0.81965554
former12 iou: 0.7948531
former13 iou: 0.8095554
former14 iou: 0.8028077
former15 iou: 0.79467815
former16 iou: 0.7950886
Max class iou:0.80892
Learning rate: 0.003000
Train 6, loss: 0.117913, train acc: 0.952744, train ins_iou: 0.906099
Test 6, loss: 0.238603, test acc: 0.909546  test ins_iou: 0.870610
Max Acc:0.90955
Max instance iou:0.87061
former1 iou: 0.872594
former2 iou: 0.8408251
former3 iou: 0.88519406
former4 iou: 0.86457855
former5 iou: 0.874709
former6 iou: 0.8699711
former7 iou: 0.8758082
former8 iou: 0.88095194
former9 iou: 0.83783686
former10 iou: 0.86476415
former11 iou: 0.8808142
former12 iou: 0.87698084
former13 iou: 0.8909531
former14 iou: 0.86780643
former15 iou: 0.85549045
former16 iou: 0.89047456
Max class iou:0.87061
Learning rate: 0.003000
Train 7, loss: 0.109877, train acc: 0.955231, train ins_iou: 0.910460
Test 7, loss: 0.188907, test acc: 0.935211  test ins_iou: 0.905131
Max Acc:0.93521
Max instance iou:0.90513
former1 iou: 0.90231174
former2 iou: 0.8889402
former3 iou: 0.8921769
former4 iou: 0.907945
former5 iou: 0.92536306
former6 iou: 0.89736134
former7 iou: 0.911345
former8 iou: 0.926065
former9 iou: 0.88804495
former10 iou: 0.90055805
former11 iou: 0.91794634
former12 iou: 0.891355
former13 iou: 0.9033654
former14 iou: 0.9033008
former15 iou: 0.89949185
former16 iou: 0.92652804
Max class iou:0.90513
Learning rate: 0.003000
Train 8, loss: 0.101413, train acc: 0.958443, train ins_iou: 0.916463
Test 8, loss: 0.152234, test acc: 0.937500  test ins_iou: 0.907899
Max Acc:0.93750
Max instance iou:0.90790
former1 iou: 0.92671776
former2 iou: 0.91999745
former3 iou: 0.9065015
former4 iou: 0.9025993
former5 iou: 0.9112493
former6 iou: 0.8918312
former7 iou: 0.88604337
former8 iou: 0.89419436
former9 iou: 0.93053615
former10 iou: 0.9017548
former11 iou: 0.89853674
former12 iou: 0.9079207
former13 iou: 0.9099303
former14 iou: 0.89762145
former15 iou: 0.9306179
former16 iou: 0.91033655
Max class iou:0.90790
Learning rate: 0.003000
Train 9, loss: 0.092198, train acc: 0.962067, train ins_iou: 0.921677
Test 9, loss: 0.122927, test acc: 0.957428  test ins_iou: 0.932427
Max Acc:0.95743
Max instance iou:0.93243
former1 iou: 0.9259859
former2 iou: 0.93165606
former3 iou: 0.93507576
former4 iou: 0.9270253
former5 iou: 0.926603
former6 iou: 0.94410807
former7 iou: 0.93386143
former8 iou: 0.9261559
former9 iou: 0.94409007
former10 iou: 0.9293985
former11 iou: 0.9368835
former12 iou: 0.9218493
former13 iou: 0.92386687
former14 iou: 0.9408916
former15 iou: 0.93122315
former16 iou: 0.94015783
Max class iou:0.93243
Learning rate: 0.003000
Train 10, loss: 0.086602, train acc: 0.964775, train ins_iou: 0.924525
Test 10, loss: 0.102370, test acc: 0.963013  test ins_iou: 0.935933
Max Acc:0.96301
Max instance iou:0.93593
former1 iou: 0.9255167
former2 iou: 0.9292699
former3 iou: 0.93981177
former4 iou: 0.9235645
former5 iou: 0.9297152
former6 iou: 0.9347718
former7 iou: 0.9374818
former8 iou: 0.9276931
former9 iou: 0.9300989
former10 iou: 0.9461435
former11 iou: 0.9334346
former12 iou: 0.946784
former13 iou: 0.953303
former14 iou: 0.939521
former15 iou: 0.9444446
former16 iou: 0.9333785
Max class iou:0.93593
Learning rate: 0.003000
Train 11, loss: 0.080108, train acc: 0.967384, train ins_iou: 0.929062
Test 11, loss: 0.106566, test acc: 0.959839  test ins_iou: 0.930163
Learning rate: 0.003000
Train 12, loss: 0.073899, train acc: 0.971031, train ins_iou: 0.936097
Test 12, loss: 0.077435, test acc: 0.968689  test ins_iou: 0.944138
Max Acc:0.96869
Max instance iou:0.94414
former1 iou: 0.94914186
former2 iou: 0.9510068
former3 iou: 0.9615217
former4 iou: 0.9509016
former5 iou: 0.9168778
former6 iou: 0.9088624
former7 iou: 0.9593835
former8 iou: 0.9424539
former9 iou: 0.94673663
former10 iou: 0.96088964
former11 iou: 0.9458592
former12 iou: 0.93820363
former13 iou: 0.95274025
former14 iou: 0.9409131
former15 iou: 0.94794106
former16 iou: 0.9327798
Max class iou:0.94414
Learning rate: 0.003000
Train 13, loss: 0.070771, train acc: 0.971619, train ins_iou: 0.936082
Test 13, loss: 0.064426, test acc: 0.976379  test ins_iou: 0.960254
Max Acc:0.97638
Max instance iou:0.96025
former1 iou: 0.9761779
former2 iou: 0.96076894
former3 iou: 0.95936805
former4 iou: 0.9593334
former5 iou: 0.9622318
former6 iou: 0.9644132
former7 iou: 0.953593
former8 iou: 0.9640419
former9 iou: 0.96490705
former10 iou: 0.9521856
former11 iou: 0.96051276
former12 iou: 0.94014394
former13 iou: 0.960498
former14 iou: 0.9703841
former15 iou: 0.94970036
former16 iou: 0.965803
Max class iou:0.96025
Learning rate: 0.003000
Train 14, loss: 0.063504, train acc: 0.975395, train ins_iou: 0.941983
Test 14, loss: 0.057735, test acc: 0.977905  test ins_iou: 0.959685
Max Acc:0.97791
Learning rate: 0.003000
Train 15, loss: 0.058295, train acc: 0.977715, train ins_iou: 0.945199
Test 15, loss: 0.056848, test acc: 0.979065  test ins_iou: 0.963952
Max Acc:0.97906
Max instance iou:0.96395
former1 iou: 0.9579115
former2 iou: 0.96350193
former3 iou: 0.9701789
former4 iou: 0.97531176
former5 iou: 0.95511377
former6 iou: 0.95887196
former7 iou: 0.96452343
former8 iou: 0.95736694
former9 iou: 0.97140217
former10 iou: 0.9619499
former11 iou: 0.9607387
former12 iou: 0.96000975
former13 iou: 0.9620977
former14 iou: 0.96805656
former15 iou: 0.9729217
former16 iou: 0.96326745
Max class iou:0.96395
Learning rate: 0.003000
Train 16, loss: 0.050803, train acc: 0.980766, train ins_iou: 0.949735
Test 16, loss: 0.072440, test acc: 0.971436  test ins_iou: 0.947894
Learning rate: 0.003000
Train 17, loss: 0.047923, train acc: 0.981674, train ins_iou: 0.951953
Test 17, loss: 0.091212, test acc: 0.964478  test ins_iou: 0.938343
Learning rate: 0.003000
Train 18, loss: 0.048269, train acc: 0.981728, train ins_iou: 0.952377
Test 18, loss: 0.066309, test acc: 0.974518  test ins_iou: 0.957221
Learning rate: 0.003000
Train 19, loss: 0.046747, train acc: 0.982391, train ins_iou: 0.952324
Test 19, loss: 0.065594, test acc: 0.974487  test ins_iou: 0.957568
Learning rate: 0.003000
Train 20, loss: 0.061065, train acc: 0.976402, train ins_iou: 0.943968
Test 20, loss: 0.097066, test acc: 0.961517  test ins_iou: 0.932357
Learning rate: 0.003000
Train 21, loss: 0.056688, train acc: 0.977982, train ins_iou: 0.946573
Test 21, loss: 0.048866, test acc: 0.981750  test ins_iou: 0.967385
Max Acc:0.98175
Max instance iou:0.96739
former1 iou: 0.9633559
former2 iou: 0.9656291
former3 iou: 0.98055464
former4 iou: 0.9674369
former5 iou: 0.97143304
former6 iou: 0.9664669
former7 iou: 0.962446
former8 iou: 0.9737167
former9 iou: 0.95721674
former10 iou: 0.962919
former11 iou: 0.9739134
former12 iou: 0.9675539
former13 iou: 0.95584655
former14 iou: 0.9644317
former15 iou: 0.96812904
former16 iou: 0.9771147
Max class iou:0.96739
Learning rate: 0.003000
Train 22, loss: 0.052259, train acc: 0.980270, train ins_iou: 0.950074
Test 22, loss: 0.045918, test acc: 0.983459  test ins_iou: 0.969441
Max Acc:0.98346
Max instance iou:0.96944
former1 iou: 0.9821109
former2 iou: 0.98074454
former3 iou: 0.9868682
former4 iou: 0.96617174
former5 iou: 0.958296
former6 iou: 0.96607316
former7 iou: 0.9715106
former8 iou: 0.96574616
former9 iou: 0.965519
former10 iou: 0.9706629
former11 iou: 0.9699396
former12 iou: 0.9673506
former13 iou: 0.97092855
former14 iou: 0.96180993
former15 iou: 0.95966613
former16 iou: 0.967663
Max class iou:0.96944
Learning rate: 0.003000
Train 23, loss: 0.042139, train acc: 0.984520, train ins_iou: 0.956994
Test 23, loss: 0.040200, test acc: 0.985016  test ins_iou: 0.972956
Max Acc:0.98502
Max instance iou:0.97296
former1 iou: 0.97269434
former2 iou: 0.9769106
former3 iou: 0.9755745
former4 iou: 0.9703848
former5 iou: 0.95643085
former6 iou: 0.97337216
former7 iou: 0.97736794
former8 iou: 0.96994966
former9 iou: 0.97999555
former10 iou: 0.9744712
former11 iou: 0.97378546
former12 iou: 0.97472423
former13 iou: 0.96261275
former14 iou: 0.9756552
former15 iou: 0.9716083
former16 iou: 0.98175687
Max class iou:0.97296
Learning rate: 0.003000
Train 24, loss: 0.040386, train acc: 0.985115, train ins_iou: 0.957512
Test 24, loss: 0.039487, test acc: 0.985229  test ins_iou: 0.972293
Max Acc:0.98523
Learning rate: 0.003000
Train 25, loss: 0.037788, train acc: 0.985840, train ins_iou: 0.957787
Test 25, loss: 0.037054, test acc: 0.987305  test ins_iou: 0.975679
Max Acc:0.98730
Max instance iou:0.97568
former1 iou: 0.98604417
former2 iou: 0.9889782
former3 iou: 0.9889503
former4 iou: 0.9800971
former5 iou: 0.966529
former6 iou: 0.97165275
former7 iou: 0.9584216
former8 iou: 0.9733878
former9 iou: 0.9783212
former10 iou: 0.96896845
former11 iou: 0.9725962
former12 iou: 0.9772936
former13 iou: 0.9563466
former14 iou: 0.98204505
former15 iou: 0.9760506
former16 iou: 0.9851874
Max class iou:0.97568
Learning rate: 0.003000
Train 26, loss: 0.038657, train acc: 0.985443, train ins_iou: 0.958162
Test 26, loss: 0.041123, test acc: 0.984497  test ins_iou: 0.974628
Learning rate: 0.003000
Train 27, loss: 0.039385, train acc: 0.985374, train ins_iou: 0.957319
Test 27, loss: 0.034400, test acc: 0.986908  test ins_iou: 0.976371
Max instance iou:0.97637
former1 iou: 0.98476595
former2 iou: 0.97653556
former3 iou: 0.9839191
former4 iou: 0.9643623
former5 iou: 0.9759018
former6 iou: 0.9771299
former7 iou: 0.97428936
former8 iou: 0.9824805
former9 iou: 0.98446953
former10 iou: 0.9763347
former11 iou: 0.9704392
former12 iou: 0.97760826
former13 iou: 0.9768998
former14 iou: 0.9597984
former15 iou: 0.98440754
former16 iou: 0.9725917
Max class iou:0.97637
Learning rate: 0.003000
Train 28, loss: 0.036145, train acc: 0.986397, train ins_iou: 0.958687
Test 28, loss: 0.037888, test acc: 0.986450  test ins_iou: 0.976752
Max instance iou:0.97675
former1 iou: 0.98236585
former2 iou: 0.9748436
former3 iou: 0.96240705
former4 iou: 0.9760724
former5 iou: 0.97223103
former6 iou: 0.9763986
former7 iou: 0.98736435
former8 iou: 0.9771398
former9 iou: 0.9738352
former10 iou: 0.97768253
former11 iou: 0.9713067
former12 iou: 0.9808287
former13 iou: 0.9836349
former14 iou: 0.9843179
former15 iou: 0.97909015
former16 iou: 0.9685145
Max class iou:0.97675
Learning rate: 0.003000
Train 29, loss: 0.032852, train acc: 0.987755, train ins_iou: 0.961846
Test 29, loss: 0.027675, test acc: 0.990051  test ins_iou: 0.980813
Max Acc:0.99005
Max instance iou:0.98081
former1 iou: 0.97845584
former2 iou: 0.978445
former3 iou: 0.9807526
former4 iou: 0.986828
former5 iou: 0.97942907
former6 iou: 0.9793524
former7 iou: 0.97865033
former8 iou: 0.9855538
former9 iou: 0.9901742
former10 iou: 0.9758235
former11 iou: 0.98296815
former12 iou: 0.97269213
former13 iou: 0.98524505
former14 iou: 0.98384243
former15 iou: 0.98388714
former16 iou: 0.970906
Max class iou:0.98081
Learning rate: 0.003000
Train 30, loss: 0.033471, train acc: 0.987686, train ins_iou: 0.962547
Test 30, loss: 0.038166, test acc: 0.985840  test ins_iou: 0.975632
Learning rate: 0.003000
Train 31, loss: 0.026436, train acc: 0.990395, train ins_iou: 0.966858
Test 31, loss: 0.030577, test acc: 0.988434  test ins_iou: 0.979608
Learning rate: 0.003000
Train 32, loss: 0.027786, train acc: 0.989792, train ins_iou: 0.965919
Test 32, loss: 0.025801, test acc: 0.989868  test ins_iou: 0.982187
Max instance iou:0.98219
former1 iou: 0.99027777
former2 iou: 0.9901765
former3 iou: 0.97836035
former4 iou: 0.98052275
former5 iou: 0.98661107
former6 iou: 0.9753903
former7 iou: 0.98626447
former8 iou: 0.98531204
former9 iou: 0.97852945
former10 iou: 0.9753148
former11 iou: 0.9841212
former12 iou: 0.9839153
former13 iou: 0.98162997
former14 iou: 0.97791314
former15 iou: 0.9842484
former16 iou: 0.9764008
Max class iou:0.98219
Learning rate: 0.003000
Train 33, loss: 0.027584, train acc: 0.989876, train ins_iou: 0.966216
Test 33, loss: 0.024344, test acc: 0.991302  test ins_iou: 0.984620
Max Acc:0.99130
Max instance iou:0.98462
former1 iou: 0.9927234
former2 iou: 0.9836364
former3 iou: 0.98114663
former4 iou: 0.97852635
former5 iou: 0.98309976
former6 iou: 0.983937
former7 iou: 0.97367704
former8 iou: 0.9896357
former9 iou: 0.986439
former10 iou: 0.97958666
former11 iou: 0.9939507
former12 iou: 0.98016095
former13 iou: 0.9856333
former14 iou: 0.9916588
former15 iou: 0.98039454
former16 iou: 0.98971164
Max class iou:0.98462
Learning rate: 0.003000
Train 34, loss: 0.025042, train acc: 0.990608, train ins_iou: 0.967875
Test 34, loss: 0.030693, test acc: 0.988922  test ins_iou: 0.979757
Learning rate: 0.003000
Train 35, loss: 0.024273, train acc: 0.990768, train ins_iou: 0.967033
Test 35, loss: 0.028676, test acc: 0.989502  test ins_iou: 0.981164
Learning rate: 0.003000
Train 36, loss: 0.024998, train acc: 0.990959, train ins_iou: 0.967465
Test 36, loss: 0.025470, test acc: 0.991180  test ins_iou: 0.983830
Learning rate: 0.003000
Train 37, loss: 0.026843, train acc: 0.989815, train ins_iou: 0.966173
Test 37, loss: 0.023897, test acc: 0.990784  test ins_iou: 0.983595
Learning rate: 0.003000
Train 38, loss: 0.027077, train acc: 0.989799, train ins_iou: 0.965559
Test 38, loss: 0.039101, test acc: 0.984436  test ins_iou: 0.973147
Learning rate: 0.003000
Train 39, loss: 0.025026, train acc: 0.990738, train ins_iou: 0.967720
Test 39, loss: 0.020074, test acc: 0.992737  test ins_iou: 0.987540
Max Acc:0.99274
Max instance iou:0.98754
former1 iou: 0.9869821
former2 iou: 0.98997146
former3 iou: 0.9771236
former4 iou: 0.9931178
former5 iou: 0.98463184
former6 iou: 0.99246025
former7 iou: 0.9880942
former8 iou: 0.9836345
former9 iou: 0.9912959
former10 iou: 0.9908874
former11 iou: 0.98193425
former12 iou: 0.9870019
former13 iou: 0.9829344
former14 iou: 0.99253386
former15 iou: 0.988456
former16 iou: 0.9895849
Max class iou:0.98754
Learning rate: 0.001500
Train 40, loss: 0.022105, train acc: 0.991768, train ins_iou: 0.969028
Test 40, loss: 0.022298, test acc: 0.991913  test ins_iou: 0.987048
Learning rate: 0.001500
Train 41, loss: 0.020497, train acc: 0.992592, train ins_iou: 0.970132
Test 41, loss: 0.016590, test acc: 0.994049  test ins_iou: 0.990018
Max Acc:0.99405
Max instance iou:0.99002
former1 iou: 0.995112
former2 iou: 0.9941634
former3 iou: 0.99047065
former4 iou: 0.99042654
former5 iou: 0.9934788
former6 iou: 0.9937555
former7 iou: 0.9848227
former8 iou: 0.9868272
former9 iou: 0.9925392
former10 iou: 0.9905866
former11 iou: 0.99176866
former12 iou: 0.98268825
former13 iou: 0.98708326
former14 iou: 0.9905401
former15 iou: 0.99422854
former16 iou: 0.9818011
Max class iou:0.99002
Learning rate: 0.001500
Train 42, loss: 0.019148, train acc: 0.993004, train ins_iou: 0.971621
Test 42, loss: 0.015981, test acc: 0.993744  test ins_iou: 0.989113
Learning rate: 0.001500
Train 43, loss: 0.016080, train acc: 0.994301, train ins_iou: 0.973690
Test 43, loss: 0.014132, test acc: 0.994659  test ins_iou: 0.991001
Max Acc:0.99466
Max instance iou:0.99100
former1 iou: 0.9930066
former2 iou: 0.99050283
former3 iou: 0.995938
former4 iou: 0.9921668
former5 iou: 0.99441653
former6 iou: 0.9887007
former7 iou: 0.98893183
former8 iou: 0.98884654
former9 iou: 0.9971793
former10 iou: 0.9901858
former11 iou: 0.98933643
former12 iou: 0.98796463
former13 iou: 0.9918629
former14 iou: 0.98686635
former15 iou: 0.99158823
former16 iou: 0.9885276
Max class iou:0.99100
Learning rate: 0.001500
Train 44, loss: 0.015338, train acc: 0.994301, train ins_iou: 0.973658
Test 44, loss: 0.013920, test acc: 0.994659  test ins_iou: 0.990924
Learning rate: 0.001500
Train 45, loss: 0.015873, train acc: 0.994041, train ins_iou: 0.973491
Test 45, loss: 0.010944, test acc: 0.996094  test ins_iou: 0.993081
Max Acc:0.99609
Max instance iou:0.99308
former1 iou: 0.9948335
former2 iou: 0.991864
former3 iou: 0.9945348
former4 iou: 0.99179876
former5 iou: 0.992394
former6 iou: 0.9839269
former7 iou: 0.99725026
former8 iou: 0.99787486
former9 iou: 0.99453664
former10 iou: 0.9942288
former11 iou: 0.98687565
former12 iou: 0.99658245
former13 iou: 0.99084723
former14 iou: 0.9956032
former15 iou: 0.99309343
former16 iou: 0.99305433
Max class iou:0.99308
Learning rate: 0.001500
Train 46, loss: 0.017546, train acc: 0.993431, train ins_iou: 0.972173
Test 46, loss: 0.010382, test acc: 0.995880  test ins_iou: 0.992733
Learning rate: 0.001500
Train 47, loss: 0.015537, train acc: 0.994308, train ins_iou: 0.973912
Test 47, loss: 0.011387, test acc: 0.995544  test ins_iou: 0.992785
Learning rate: 0.001500
Train 48, loss: 0.013340, train acc: 0.995125, train ins_iou: 0.975316
Test 48, loss: 0.011812, test acc: 0.996490  test ins_iou: 0.993335
Max Acc:0.99649
Max instance iou:0.99334
former1 iou: 0.9958027
former2 iou: 0.9894485
former3 iou: 0.99792814
former4 iou: 0.98666847
former5 iou: 0.9896623
former6 iou: 0.9816822
former7 iou: 0.9965206
former8 iou: 0.99149746
former9 iou: 0.9945591
former10 iou: 0.9977624
former11 iou: 0.99626553
former12 iou: 0.99451244
former13 iou: 0.99653834
former14 iou: 0.99686396
former15 iou: 0.9949358
former16 iou: 0.99271274
Max class iou:0.99334
Learning rate: 0.001500
Train 49, loss: 0.013183, train acc: 0.995560, train ins_iou: 0.976004
Test 49, loss: 0.010735, test acc: 0.995789  test ins_iou: 0.992964
Learning rate: 0.001500
Train 50, loss: 0.012634, train acc: 0.995293, train ins_iou: 0.975683
Test 50, loss: 0.011744, test acc: 0.995270  test ins_iou: 0.991504
Learning rate: 0.001500
Train 51, loss: 0.012177, train acc: 0.995529, train ins_iou: 0.976169
Test 51, loss: 0.011398, test acc: 0.995361  test ins_iou: 0.992427
Learning rate: 0.001500
Train 52, loss: 0.013463, train acc: 0.995148, train ins_iou: 0.975771
Test 52, loss: 0.008391, test acc: 0.997070  test ins_iou: 0.994953
Max Acc:0.99707
Max instance iou:0.99495
former1 iou: 0.992569
former2 iou: 0.9974007
former3 iou: 0.99659115
former4 iou: 0.99480885
former5 iou: 0.9961627
former6 iou: 0.9916931
former7 iou: 0.9947655
former8 iou: 0.99552643
former9 iou: 0.9961388
former10 iou: 0.9939964
former11 iou: 0.99712884
former12 iou: 0.9943058
former13 iou: 0.9897
former14 iou: 0.99322706
former15 iou: 0.9985479
former16 iou: 0.99668753
Max class iou:0.99495
Learning rate: 0.001500
Train 53, loss: 0.011239, train acc: 0.995941, train ins_iou: 0.976860
Test 53, loss: 0.008438, test acc: 0.996643  test ins_iou: 0.994182
Learning rate: 0.001500
Train 54, loss: 0.010912, train acc: 0.996132, train ins_iou: 0.976989
Test 54, loss: 0.012098, test acc: 0.995331  test ins_iou: 0.991459
Learning rate: 0.001500
Train 55, loss: 0.010926, train acc: 0.996208, train ins_iou: 0.976943
Test 55, loss: 0.009707, test acc: 0.996246  test ins_iou: 0.993147
Learning rate: 0.001500
Train 56, loss: 0.010122, train acc: 0.996635, train ins_iou: 0.977961
Test 56, loss: 0.009644, test acc: 0.996368  test ins_iou: 0.993282
Learning rate: 0.001500
Train 57, loss: 0.010482, train acc: 0.996262, train ins_iou: 0.977403
Test 57, loss: 0.007956, test acc: 0.997253  test ins_iou: 0.995575
Max Acc:0.99725
Max instance iou:0.99557
former1 iou: 0.99763983
former2 iou: 0.9971691
former3 iou: 0.9967084
former4 iou: 0.99586153
former5 iou: 0.99456465
former6 iou: 0.99588454
former7 iou: 0.99593806
former8 iou: 0.9919479
former9 iou: 0.9952254
former10 iou: 0.99606663
former11 iou: 0.9933108
former12 iou: 0.99249816
former13 iou: 0.9992842
former14 iou: 1.0
former15 iou: 0.9927954
former16 iou: 0.9942974
Max class iou:0.99557
Learning rate: 0.001500
Train 58, loss: 0.010962, train acc: 0.995949, train ins_iou: 0.977005
Test 58, loss: 0.007218, test acc: 0.997406  test ins_iou: 0.995500
Max Acc:0.99741
Learning rate: 0.001500
Train 59, loss: 0.010528, train acc: 0.996178, train ins_iou: 0.977847
Test 59, loss: 0.010156, test acc: 0.996063  test ins_iou: 0.993018
Learning rate: 0.001500
Train 60, loss: 0.010726, train acc: 0.995987, train ins_iou: 0.976609
Test 60, loss: 0.007553, test acc: 0.997131  test ins_iou: 0.995117
Learning rate: 0.001500
Train 61, loss: 0.010775, train acc: 0.996071, train ins_iou: 0.976895
Test 61, loss: 0.010770, test acc: 0.995331  test ins_iou: 0.992725
Learning rate: 0.001500
Train 62, loss: 0.010587, train acc: 0.996361, train ins_iou: 0.977342
Test 62, loss: 0.008452, test acc: 0.996307  test ins_iou: 0.993599
Learning rate: 0.001500
Train 63, loss: 0.009756, train acc: 0.996483, train ins_iou: 0.977519
Test 63, loss: 0.014115, test acc: 0.994812  test ins_iou: 0.989937
Learning rate: 0.001500
Train 64, loss: 0.012079, train acc: 0.995468, train ins_iou: 0.976149
Test 64, loss: 0.008724, test acc: 0.996368  test ins_iou: 0.993898
Learning rate: 0.001500
Train 65, loss: 0.010391, train acc: 0.996147, train ins_iou: 0.977052
Test 65, loss: 0.007122, test acc: 0.997375  test ins_iou: 0.995272
Learning rate: 0.001500
Train 66, loss: 0.010678, train acc: 0.996422, train ins_iou: 0.977386
Test 66, loss: 0.009207, test acc: 0.996582  test ins_iou: 0.994214
Learning rate: 0.001500
Train 67, loss: 0.010214, train acc: 0.996201, train ins_iou: 0.976801
Test 67, loss: 0.009501, test acc: 0.996094  test ins_iou: 0.992917
Learning rate: 0.001500
Train 68, loss: 0.011089, train acc: 0.996094, train ins_iou: 0.977017
Test 68, loss: 0.009930, test acc: 0.995972  test ins_iou: 0.992963
Learning rate: 0.001500
Train 69, loss: 0.009406, train acc: 0.996643, train ins_iou: 0.977889
Test 69, loss: 0.008701, test acc: 0.996460  test ins_iou: 0.993819
Learning rate: 0.001500
Train 70, loss: 0.008923, train acc: 0.996750, train ins_iou: 0.978305
Test 70, loss: 0.006868, test acc: 0.997650  test ins_iou: 0.996079
Max Acc:0.99765
Max instance iou:0.99608
former1 iou: 0.99299306
former2 iou: 0.9992896
former3 iou: 0.99862367
former4 iou: 0.9980175
former5 iou: 0.9979392
former6 iou: 0.99928766
former7 iou: 0.9978389
former8 iou: 0.9923481
former9 iou: 0.997452
former10 iou: 0.9901752
former11 iou: 0.9892152
former12 iou: 0.9992566
former13 iou: 0.999219
former14 iou: 0.99564064
former15 iou: 0.9936732
former16 iou: 0.99629074
Max class iou:0.99608
Learning rate: 0.001500
Train 71, loss: 0.008424, train acc: 0.996964, train ins_iou: 0.978797
Test 71, loss: 0.007950, test acc: 0.997314  test ins_iou: 0.995569
Learning rate: 0.001500
Train 72, loss: 0.009764, train acc: 0.996460, train ins_iou: 0.977911
Test 72, loss: 0.006301, test acc: 0.997589  test ins_iou: 0.996133
Max instance iou:0.99613
former1 iou: 0.9980194
former2 iou: 0.99719185
former3 iou: 0.99252564
former4 iou: 0.99885553
former5 iou: 0.9992768
former6 iou: 0.9921132
former7 iou: 1.0
former8 iou: 0.9972556
former9 iou: 0.9894898
former10 iou: 0.9965366
former11 iou: 1.0
former12 iou: 0.9983515
former13 iou: 0.9972949
former14 iou: 0.9875084
former15 iou: 0.9982988
former16 iou: 0.9954174
Max class iou:0.99613
Learning rate: 0.001500
Train 73, loss: 0.009398, train acc: 0.996460, train ins_iou: 0.977844
Test 73, loss: 0.006823, test acc: 0.996918  test ins_iou: 0.993800
Learning rate: 0.001500
Train 74, loss: 0.009740, train acc: 0.996567, train ins_iou: 0.978099
Test 74, loss: 0.011397, test acc: 0.996002  test ins_iou: 0.993259
Learning rate: 0.001500
Train 75, loss: 0.010824, train acc: 0.995987, train ins_iou: 0.977204
Test 75, loss: 0.006820, test acc: 0.997284  test ins_iou: 0.995397
Learning rate: 0.001500
Train 76, loss: 0.010013, train acc: 0.996292, train ins_iou: 0.977405
Test 76, loss: 0.011035, test acc: 0.995972  test ins_iou: 0.993021
Learning rate: 0.001500
Train 77, loss: 0.010264, train acc: 0.996239, train ins_iou: 0.977835
Test 77, loss: 0.008592, test acc: 0.997375  test ins_iou: 0.995778
Learning rate: 0.001500
Train 78, loss: 0.009762, train acc: 0.996658, train ins_iou: 0.978136
Test 78, loss: 0.009268, test acc: 0.997559  test ins_iou: 0.996171
Max instance iou:0.99617
former1 iou: 0.9927953
former2 iou: 0.98941684
former3 iou: 0.99761766
former4 iou: 0.9959161
former5 iou: 0.9901515
former6 iou: 0.99580723
former7 iou: 0.9989871
former8 iou: 0.99729174
former9 iou: 0.99662846
former10 iou: 0.99794334
former11 iou: 0.99717784
former12 iou: 0.9963941
former13 iou: 0.9965894
former14 iou: 0.9992976
former15 iou: 0.999336
former16 iou: 0.99739283
Max class iou:0.99617
Learning rate: 0.001500
Train 79, loss: 0.010001, train acc: 0.996529, train ins_iou: 0.978268
Test 79, loss: 0.009383, test acc: 0.996674  test ins_iou: 0.994019
Learning rate: 0.000750
Train 80, loss: 0.009296, train acc: 0.996712, train ins_iou: 0.978311
Test 80, loss: 0.010537, test acc: 0.996368  test ins_iou: 0.993534
Learning rate: 0.000750
Train 81, loss: 0.009144, train acc: 0.996605, train ins_iou: 0.977781
Test 81, loss: 0.005232, test acc: 0.997986  test ins_iou: 0.996515
Max Acc:0.99799
Max instance iou:0.99652
former1 iou: 0.99830496
former2 iou: 0.9944267
former3 iou: 0.9977929
former4 iou: 0.9916317
former5 iou: 0.99799466
former6 iou: 0.99508226
former7 iou: 0.99742895
former8 iou: 0.99669313
former9 iou: 1.0
former10 iou: 0.9949783
former11 iou: 0.99802154
former12 iou: 0.9950169
former13 iou: 0.99391407
former14 iou: 0.99916613
former15 iou: 0.9964205
former16 iou: 0.9973716
Max class iou:0.99652
Learning rate: 0.000750
Train 82, loss: 0.007641, train acc: 0.997177, train ins_iou: 0.979315
Test 82, loss: 0.005291, test acc: 0.998413  test ins_iou: 0.997189
Max Acc:0.99841
Max instance iou:0.99719
former1 iou: 0.99376404
former2 iou: 0.99460894
former3 iou: 0.99709415
former4 iou: 0.9976854
former5 iou: 0.99836296
former6 iou: 0.9962158
former7 iou: 0.99718004
former8 iou: 0.9983619
former9 iou: 0.999034
former10 iou: 0.9992831
former11 iou: 0.9975531
former12 iou: 0.993015
former13 iou: 0.9965496
former14 iou: 0.99906003
former15 iou: 0.99898237
former16 iou: 0.99827236
Max class iou:0.99719
Learning rate: 0.000750
Train 83, loss: 0.007312, train acc: 0.997429, train ins_iou: 0.979799
Test 83, loss: 0.004748, test acc: 0.998077  test ins_iou: 0.996655
Learning rate: 0.000750
Train 84, loss: 0.008015, train acc: 0.997040, train ins_iou: 0.979120
Test 84, loss: 0.004471, test acc: 0.998383  test ins_iou: 0.997331
Max instance iou:0.99733
former1 iou: 0.9962204
former2 iou: 0.99857277
former3 iou: 0.99482995
former4 iou: 0.99742454
former5 iou: 0.99644524
former6 iou: 0.99369013
former7 iou: 0.99930555
former8 iou: 0.9944424
former9 iou: 0.9968772
former10 iou: 0.9988946
former11 iou: 0.99895114
former12 iou: 0.9983079
former13 iou: 1.0
former14 iou: 0.9975378
former15 iou: 0.99650085
former16 iou: 0.9992956
Max class iou:0.99733
Learning rate: 0.000750
Train 85, loss: 0.006220, train acc: 0.997864, train ins_iou: 0.980716
Test 85, loss: 0.004567, test acc: 0.998138  test ins_iou: 0.997009
Learning rate: 0.000750
Train 86, loss: 0.006315, train acc: 0.997711, train ins_iou: 0.979980
Test 86, loss: 0.004674, test acc: 0.998352  test ins_iou: 0.997332
Max instance iou:0.99733
former1 iou: 0.99496406
former2 iou: 0.9985275
former3 iou: 0.9968288
former4 iou: 0.99626297
former5 iou: 0.9980694
former6 iou: 0.99866086
former7 iou: 0.9972755
former8 iou: 0.99792147
former9 iou: 0.99859977
former10 iou: 0.99832386
former11 iou: 0.99496645
former12 iou: 0.99840903
former13 iou: 0.9957605
former14 iou: 0.999284
former15 iou: 0.9948171
former16 iou: 0.9986386
Max class iou:0.99733
Learning rate: 0.000750
Train 87, loss: 0.005887, train acc: 0.997902, train ins_iou: 0.980425
Test 87, loss: 0.007294, test acc: 0.997131  test ins_iou: 0.995699
Learning rate: 0.000750
Train 88, loss: 0.008381, train acc: 0.996918, train ins_iou: 0.979026
Test 88, loss: 0.003349, test acc: 0.998810  test ins_iou: 0.997891
Max Acc:0.99881
Max instance iou:0.99789
former1 iou: 0.9911929
former2 iou: 0.9980725
former3 iou: 1.0
former4 iou: 0.9977891
former5 iou: 0.9978674
former6 iou: 0.99933
former7 iou: 0.99698055
former8 iou: 0.9976266
former9 iou: 0.9992656
former10 iou: 0.99901754
former11 iou: 0.9978992
former12 iou: 0.99664384
former13 iou: 1.0
former14 iou: 0.99928296
former15 iou: 0.99760854
former16 iou: 0.99768376
Max class iou:0.99789
Learning rate: 0.000750
Train 89, loss: 0.006413, train acc: 0.997673, train ins_iou: 0.980214
Test 89, loss: 0.005089, test acc: 0.997986  test ins_iou: 0.996948
Learning rate: 0.000750
Train 90, loss: 0.006518, train acc: 0.997749, train ins_iou: 0.980457
Test 90, loss: 0.005456, test acc: 0.998169  test ins_iou: 0.997051
Learning rate: 0.000750
Train 91, loss: 0.007029, train acc: 0.997482, train ins_iou: 0.979864
Test 91, loss: 0.007466, test acc: 0.997589  test ins_iou: 0.996223
Learning rate: 0.000750
Train 92, loss: 0.006683, train acc: 0.997711, train ins_iou: 0.980193
Test 92, loss: 0.004218, test acc: 0.998383  test ins_iou: 0.997082
Learning rate: 0.000750
Train 93, loss: 0.005887, train acc: 0.998093, train ins_iou: 0.980842
Test 93, loss: 0.003433, test acc: 0.998962  test ins_iou: 0.998300
Max Acc:0.99896
Max instance iou:0.99830
former1 iou: 1.0
former2 iou: 0.9980266
former3 iou: 0.99843884
former4 iou: 0.9969381
former5 iou: 0.995861
former6 iou: 0.9972391
former7 iou: 1.0
former8 iou: 0.99795675
former9 iou: 0.9983565
former10 iou: 1.0
former11 iou: 1.0
former12 iou: 0.9993172
former13 iou: 0.99634504
former14 iou: 1.0
former15 iou: 0.994325
former16 iou: 1.0
Max class iou:0.99830
Learning rate: 0.000750
Train 94, loss: 0.005010, train acc: 0.998337, train ins_iou: 0.980936
Test 94, loss: 0.004388, test acc: 0.998260  test ins_iou: 0.997344
Learning rate: 0.000750
Train 95, loss: 0.005010, train acc: 0.998245, train ins_iou: 0.980928
Test 95, loss: 0.003840, test acc: 0.998535  test ins_iou: 0.997476
Learning rate: 0.000750
Train 96, loss: 0.005551, train acc: 0.997986, train ins_iou: 0.980714
Test 96, loss: 0.003257, test acc: 0.998718  test ins_iou: 0.997595
Learning rate: 0.000750
Train 97, loss: 0.005009, train acc: 0.998459, train ins_iou: 0.981434
Test 97, loss: 0.004457, test acc: 0.998688  test ins_iou: 0.997872
Learning rate: 0.000750
Train 98, loss: 0.005579, train acc: 0.998154, train ins_iou: 0.980879
Test 98, loss: 0.004848, test acc: 0.998444  test ins_iou: 0.997366
Learning rate: 0.000750
Train 99, loss: 0.005692, train acc: 0.997879, train ins_iou: 0.980398
Test 99, loss: 0.004225, test acc: 0.998505  test ins_iou: 0.997621
Learning rate: 0.000750
Train 100, loss: 0.005433, train acc: 0.998070, train ins_iou: 0.981020
Test 100, loss: 0.005990, test acc: 0.997681  test ins_iou: 0.996293
Learning rate: 0.000750
Train 101, loss: 0.005828, train acc: 0.997986, train ins_iou: 0.980729
Test 101, loss: 0.002811, test acc: 0.999146  test ins_iou: 0.998588
Max Acc:0.99915
Max instance iou:0.99859
former1 iou: 0.99927604
former2 iou: 0.99927366
former3 iou: 0.9979514
former4 iou: 0.9974036
former5 iou: 0.998517
former6 iou: 1.0
former7 iou: 0.99762064
former8 iou: 0.9992859
former9 iou: 0.99862504
former10 iou: 0.99852777
former11 iou: 0.99609053
former12 iou: 0.9991614
former13 iou: 1.0
former14 iou: 0.99902785
former15 iou: 0.99903667
former16 iou: 0.9976125
Max class iou:0.99859
Learning rate: 0.000750
Train 102, loss: 0.004768, train acc: 0.998268, train ins_iou: 0.981343
Test 102, loss: 0.003150, test acc: 0.998962  test ins_iou: 0.998145
Learning rate: 0.000750
Train 103, loss: 0.004557, train acc: 0.998482, train ins_iou: 0.981309
Test 103, loss: 0.003090, test acc: 0.998840  test ins_iou: 0.997870
Learning rate: 0.000750
Train 104, loss: 0.005317, train acc: 0.998093, train ins_iou: 0.980748
Test 104, loss: 0.004874, test acc: 0.997894  test ins_iou: 0.996543
Learning rate: 0.000750
Train 105, loss: 0.005494, train acc: 0.998100, train ins_iou: 0.981156
Test 105, loss: 0.003898, test acc: 0.998413  test ins_iou: 0.997520
Learning rate: 0.000750
Train 106, loss: 0.005486, train acc: 0.998032, train ins_iou: 0.980714
Test 106, loss: 0.005513, test acc: 0.997986  test ins_iou: 0.996827
Learning rate: 0.000750
Train 107, loss: 0.005629, train acc: 0.998085, train ins_iou: 0.980915
Test 107, loss: 0.004479, test acc: 0.998169  test ins_iou: 0.997031
Learning rate: 0.000750
Train 108, loss: 0.005663, train acc: 0.998039, train ins_iou: 0.980659
Test 108, loss: 0.003298, test acc: 0.998932  test ins_iou: 0.998191
Learning rate: 0.000750
Train 109, loss: 0.005368, train acc: 0.998192, train ins_iou: 0.981273
Test 109, loss: 0.004452, test acc: 0.998474  test ins_iou: 0.996978
Learning rate: 0.000750
Train 110, loss: 0.006742, train acc: 0.997696, train ins_iou: 0.979826
Test 110, loss: 0.005175, test acc: 0.997986  test ins_iou: 0.996006
Learning rate: 0.000750
Train 111, loss: 0.006605, train acc: 0.997696, train ins_iou: 0.980479
Test 111, loss: 0.003450, test acc: 0.998932  test ins_iou: 0.998270
Learning rate: 0.000750
Train 112, loss: 0.004571, train acc: 0.998528, train ins_iou: 0.981781
Test 112, loss: 0.003910, test acc: 0.998413  test ins_iou: 0.997044
Learning rate: 0.000750
Train 113, loss: 0.006612, train acc: 0.997726, train ins_iou: 0.980560
Test 113, loss: 0.003326, test acc: 0.998871  test ins_iou: 0.998092
Learning rate: 0.000750
Train 114, loss: 0.004832, train acc: 0.998360, train ins_iou: 0.980963
Test 114, loss: 0.003241, test acc: 0.998627  test ins_iou: 0.997878
Learning rate: 0.000750
Train 115, loss: 0.005070, train acc: 0.998245, train ins_iou: 0.981151
Test 115, loss: 0.004303, test acc: 0.998444  test ins_iou: 0.996747
Learning rate: 0.000750
Train 116, loss: 0.005363, train acc: 0.998222, train ins_iou: 0.981334
Test 116, loss: 0.002788, test acc: 0.999268  test ins_iou: 0.998680
Max Acc:0.99927
Max instance iou:0.99868
former1 iou: 1.0
former2 iou: 0.9985438
former3 iou: 1.0
former4 iou: 0.9970628
former5 iou: 0.9967583
former6 iou: 1.0
former7 iou: 1.0
former8 iou: 0.99594283
former9 iou: 0.99698275
former10 iou: 0.9986535
former11 iou: 0.9969909
former12 iou: 0.9992952
former13 iou: 1.0
former14 iou: 0.99932927
former15 iou: 0.9993144
former16 iou: 1.0
Max class iou:0.99868
Learning rate: 0.000750
Train 117, loss: 0.005188, train acc: 0.998199, train ins_iou: 0.981084
Test 117, loss: 0.003935, test acc: 0.998657  test ins_iou: 0.997575
Learning rate: 0.000750
Train 118, loss: 0.004270, train acc: 0.998573, train ins_iou: 0.981571
Test 118, loss: 0.004101, test acc: 0.998566  test ins_iou: 0.997135
Learning rate: 0.000750
Train 119, loss: 0.004845, train acc: 0.998421, train ins_iou: 0.981118
Test 119, loss: 0.002658, test acc: 0.999115  test ins_iou: 0.998382
Learning rate: 0.000375
Train 120, loss: 0.004597, train acc: 0.998367, train ins_iou: 0.981199
Test 120, loss: 0.002815, test acc: 0.999084  test ins_iou: 0.998370
Learning rate: 0.000375
Train 121, loss: 0.004005, train acc: 0.998688, train ins_iou: 0.982008
Test 121, loss: 0.002334, test acc: 0.999542  test ins_iou: 0.999203
Max Acc:0.99954
Max instance iou:0.99920
former1 iou: 1.0
former2 iou: 1.0
former3 iou: 1.0
former4 iou: 1.0
former5 iou: 0.99897295
former6 iou: 0.9980173
former7 iou: 1.0
former8 iou: 1.0
former9 iou: 1.0
former10 iou: 0.999309
former11 iou: 1.0
former12 iou: 0.99413794
former13 iou: 0.9991807
former14 iou: 0.9990621
former15 iou: 0.99857527
former16 iou: 1.0
Max class iou:0.99920
Learning rate: 0.000375
Train 122, loss: 0.004489, train acc: 0.998642, train ins_iou: 0.981686
Test 122, loss: 0.002249, test acc: 0.999237  test ins_iou: 0.998750
Learning rate: 0.000375
Train 123, loss: 0.004308, train acc: 0.998550, train ins_iou: 0.981809
Test 123, loss: 0.003079, test acc: 0.998932  test ins_iou: 0.998042
Learning rate: 0.000375
Train 124, loss: 0.003852, train acc: 0.998795, train ins_iou: 0.982199
Test 124, loss: 0.002639, test acc: 0.999115  test ins_iou: 0.998522
Learning rate: 0.000375
Train 125, loss: 0.003526, train acc: 0.998756, train ins_iou: 0.982122
Test 125, loss: 0.002509, test acc: 0.999207  test ins_iou: 0.998698
Learning rate: 0.000375
Train 126, loss: 0.003952, train acc: 0.998657, train ins_iou: 0.981676
Test 126, loss: 0.002838, test acc: 0.998932  test ins_iou: 0.998193
Learning rate: 0.000375
Train 127, loss: 0.004389, train acc: 0.998528, train ins_iou: 0.981775
Test 127, loss: 0.004539, test acc: 0.998474  test ins_iou: 0.997468
Learning rate: 0.000375
Train 128, loss: 0.004283, train acc: 0.998566, train ins_iou: 0.981755
Test 128, loss: 0.003512, test acc: 0.998718  test ins_iou: 0.997732
Learning rate: 0.000375
Train 129, loss: 0.004180, train acc: 0.998650, train ins_iou: 0.982114
Test 129, loss: 0.004315, test acc: 0.998291  test ins_iou: 0.996663
Learning rate: 0.000375
Train 130, loss: 0.004390, train acc: 0.998459, train ins_iou: 0.981555
Test 130, loss: 0.002459, test acc: 0.999054  test ins_iou: 0.998520
Learning rate: 0.000375
Train 131, loss: 0.003579, train acc: 0.998772, train ins_iou: 0.982098
Test 131, loss: 0.002024, test acc: 0.999176  test ins_iou: 0.998639
Learning rate: 0.000375
Train 132, loss: 0.004307, train acc: 0.998558, train ins_iou: 0.981682
Test 132, loss: 0.001931, test acc: 0.999298  test ins_iou: 0.998706
Learning rate: 0.000375
Train 133, loss: 0.004233, train acc: 0.998589, train ins_iou: 0.981779
Test 133, loss: 0.002702, test acc: 0.998871  test ins_iou: 0.998026
Learning rate: 0.000375
Train 134, loss: 0.004725, train acc: 0.998451, train ins_iou: 0.981468
Test 134, loss: 0.003555, test acc: 0.998566  test ins_iou: 0.997729
Learning rate: 0.000375
Train 135, loss: 0.004261, train acc: 0.998459, train ins_iou: 0.981560
Test 135, loss: 0.002299, test acc: 0.998993  test ins_iou: 0.997896
Learning rate: 0.000375
Train 136, loss: 0.003536, train acc: 0.998825, train ins_iou: 0.982360
Test 136, loss: 0.002169, test acc: 0.999451  test ins_iou: 0.999100
Learning rate: 0.000375
Train 137, loss: 0.003956, train acc: 0.998772, train ins_iou: 0.982365
Test 137, loss: 0.001506, test acc: 0.999725  test ins_iou: 0.999570
Max Acc:0.99973
Max instance iou:0.99957
former1 iou: 0.9981473
former2 iou: 1.0
former3 iou: 1.0
former4 iou: 0.9983555
former5 iou: 1.0
former6 iou: 1.0
former7 iou: 1.0
former8 iou: 1.0
former9 iou: 1.0
former10 iou: 0.99798375
former11 iou: 1.0
former12 iou: 0.99862677
former13 iou: 1.0
former14 iou: 1.0
former15 iou: 1.0
former16 iou: 1.0
Max class iou:0.99957
Learning rate: 0.000375
Train 138, loss: 0.003662, train acc: 0.998886, train ins_iou: 0.982498
Test 138, loss: 0.003435, test acc: 0.998871  test ins_iou: 0.998270
Learning rate: 0.000375
Train 139, loss: 0.002977, train acc: 0.998909, train ins_iou: 0.982408
Test 139, loss: 0.002227, test acc: 0.999054  test ins_iou: 0.998542
Learning rate: 0.000375
Train 140, loss: 0.003437, train acc: 0.998909, train ins_iou: 0.982399
Test 140, loss: 0.002844, test acc: 0.998901  test ins_iou: 0.998237
Learning rate: 0.000375
Train 141, loss: 0.003062, train acc: 0.998924, train ins_iou: 0.982355
Test 141, loss: 0.002668, test acc: 0.999359  test ins_iou: 0.998973
Learning rate: 0.000375
Train 142, loss: 0.003800, train acc: 0.998756, train ins_iou: 0.982246
Test 142, loss: 0.002299, test acc: 0.999054  test ins_iou: 0.998393
Learning rate: 0.000375
Train 143, loss: 0.003955, train acc: 0.998787, train ins_iou: 0.982313
Test 143, loss: 0.003021, test acc: 0.999054  test ins_iou: 0.998457
Learning rate: 0.000375
Train 144, loss: 0.003464, train acc: 0.998878, train ins_iou: 0.982353
Test 144, loss: 0.002310, test acc: 0.999176  test ins_iou: 0.998542
Learning rate: 0.000375
Train 145, loss: 0.004051, train acc: 0.998787, train ins_iou: 0.982303
Test 145, loss: 0.002139, test acc: 0.999084  test ins_iou: 0.998474
Learning rate: 0.000375
Train 146, loss: 0.003434, train acc: 0.999016, train ins_iou: 0.982641
Test 146, loss: 0.002345, test acc: 0.999115  test ins_iou: 0.998433
Learning rate: 0.000375
Train 147, loss: 0.003403, train acc: 0.998856, train ins_iou: 0.982320
Test 147, loss: 0.003145, test acc: 0.999023  test ins_iou: 0.998425
Learning rate: 0.000375
Train 148, loss: 0.003660, train acc: 0.998680, train ins_iou: 0.982215
Test 148, loss: 0.002365, test acc: 0.999268  test ins_iou: 0.998845
Learning rate: 0.000375
Train 149, loss: 0.003772, train acc: 0.998703, train ins_iou: 0.982179
Test 149, loss: 0.003297, test acc: 0.998840  test ins_iou: 0.998104
Learning rate: 0.000375
Train 150, loss: 0.003013, train acc: 0.999115, train ins_iou: 0.982943
Test 150, loss: 0.002094, test acc: 0.999390  test ins_iou: 0.999004
Learning rate: 0.000375
Train 151, loss: 0.003182, train acc: 0.999069, train ins_iou: 0.982654
Test 151, loss: 0.003516, test acc: 0.998718  test ins_iou: 0.997822
Learning rate: 0.000375
Train 152, loss: 0.003420, train acc: 0.998917, train ins_iou: 0.982596
Test 152, loss: 0.002435, test acc: 0.999268  test ins_iou: 0.998886
Learning rate: 0.000375
Train 153, loss: 0.003940, train acc: 0.998749, train ins_iou: 0.982309
Test 153, loss: 0.002547, test acc: 0.999268  test ins_iou: 0.998833
Learning rate: 0.000375
Train 154, loss: 0.002623, train acc: 0.999184, train ins_iou: 0.982883
Test 154, loss: 0.002025, test acc: 0.999359  test ins_iou: 0.999016
Learning rate: 0.000375
Train 155, loss: 0.002929, train acc: 0.999039, train ins_iou: 0.982817
Test 155, loss: 0.001980, test acc: 0.999237  test ins_iou: 0.998562
Learning rate: 0.000375
Train 156, loss: 0.003466, train acc: 0.998787, train ins_iou: 0.982336
Test 156, loss: 0.001443, test acc: 0.999573  test ins_iou: 0.999365
Learning rate: 0.000375
Train 157, loss: 0.003515, train acc: 0.998856, train ins_iou: 0.982384
Test 157, loss: 0.002919, test acc: 0.999023  test ins_iou: 0.998526
Learning rate: 0.000375
Train 158, loss: 0.004568, train acc: 0.998642, train ins_iou: 0.982153
Test 158, loss: 0.003136, test acc: 0.998688  test ins_iou: 0.997922
Learning rate: 0.000375
Train 159, loss: 0.003416, train acc: 0.998878, train ins_iou: 0.982456
Test 159, loss: 0.002548, test acc: 0.999207  test ins_iou: 0.998793
Learning rate: 0.000188
Train 160, loss: 0.003377, train acc: 0.998787, train ins_iou: 0.982516
Test 160, loss: 0.003882, test acc: 0.998627  test ins_iou: 0.997650
Learning rate: 0.000188
Train 161, loss: 0.003476, train acc: 0.998787, train ins_iou: 0.982379
Test 161, loss: 0.002129, test acc: 0.999268  test ins_iou: 0.998693
Learning rate: 0.000188
Train 162, loss: 0.003071, train acc: 0.999001, train ins_iou: 0.982673
Test 162, loss: 0.001860, test acc: 0.999268  test ins_iou: 0.998891
Learning rate: 0.000188
Train 163, loss: 0.002660, train acc: 0.999107, train ins_iou: 0.982871
Test 163, loss: 0.001409, test acc: 0.999603  test ins_iou: 0.999374
Learning rate: 0.000188
Train 164, loss: 0.003201, train acc: 0.999016, train ins_iou: 0.982634
Test 164, loss: 0.001795, test acc: 0.999420  test ins_iou: 0.999134
Learning rate: 0.000188
Train 165, loss: 0.002450, train acc: 0.999268, train ins_iou: 0.983125
Test 165, loss: 0.002030, test acc: 0.999542  test ins_iou: 0.999124
Learning rate: 0.000188
Train 166, loss: 0.003539, train acc: 0.998802, train ins_iou: 0.982170
Test 166, loss: 0.001465, test acc: 0.999573  test ins_iou: 0.999311
Learning rate: 0.000188
Train 167, loss: 0.002984, train acc: 0.999016, train ins_iou: 0.982656
Test 167, loss: 0.002623, test acc: 0.998993  test ins_iou: 0.998242
Learning rate: 0.000188
Train 168, loss: 0.002380, train acc: 0.999374, train ins_iou: 0.983449
Test 168, loss: 0.001214, test acc: 0.999634  test ins_iou: 0.999455
Learning rate: 0.000188
Train 169, loss: 0.003188, train acc: 0.998993, train ins_iou: 0.982637
Test 169, loss: 0.001904, test acc: 0.999451  test ins_iou: 0.999203
Learning rate: 0.000188
Train 170, loss: 0.003256, train acc: 0.998894, train ins_iou: 0.982453
Test 170, loss: 0.001628, test acc: 0.999451  test ins_iou: 0.999072
Learning rate: 0.000188
Train 171, loss: 0.002835, train acc: 0.999138, train ins_iou: 0.983015
Test 171, loss: 0.002362, test acc: 0.999420  test ins_iou: 0.998938
Learning rate: 0.000188
Train 172, loss: 0.003442, train acc: 0.998909, train ins_iou: 0.982242
Test 172, loss: 0.002236, test acc: 0.999146  test ins_iou: 0.998266
Learning rate: 0.000188
Train 173, loss: 0.003185, train acc: 0.998932, train ins_iou: 0.982351
Test 173, loss: 0.002037, test acc: 0.999176  test ins_iou: 0.998510
Learning rate: 0.000188
Train 174, loss: 0.003119, train acc: 0.998924, train ins_iou: 0.982570
Test 174, loss: 0.001439, test acc: 0.999542  test ins_iou: 0.999041
Learning rate: 0.000188
Train 175, loss: 0.003049, train acc: 0.999062, train ins_iou: 0.982896
Test 175, loss: 0.003000, test acc: 0.999054  test ins_iou: 0.998423
Learning rate: 0.000188
Train 176, loss: 0.003048, train acc: 0.999016, train ins_iou: 0.982508
Test 176, loss: 0.001744, test acc: 0.999634  test ins_iou: 0.999390
Learning rate: 0.000188
Train 177, loss: 0.002803, train acc: 0.999168, train ins_iou: 0.983019
Test 177, loss: 0.001717, test acc: 0.999329  test ins_iou: 0.998768
Learning rate: 0.000188
Train 178, loss: 0.003173, train acc: 0.998993, train ins_iou: 0.982466
Test 178, loss: 0.002068, test acc: 0.999207  test ins_iou: 0.998533
Learning rate: 0.000188
Train 179, loss: 0.003412, train acc: 0.998795, train ins_iou: 0.982541
Test 179, loss: 0.001641, test acc: 0.999573  test ins_iou: 0.999322
Learning rate: 0.000188
Train 180, loss: 0.002597, train acc: 0.999146, train ins_iou: 0.982746
Test 180, loss: 0.001411, test acc: 0.999512  test ins_iou: 0.999212
Learning rate: 0.000188
Train 181, loss: 0.002840, train acc: 0.999062, train ins_iou: 0.982810
Test 181, loss: 0.001792, test acc: 0.999603  test ins_iou: 0.999355
Learning rate: 0.000188
Train 182, loss: 0.002657, train acc: 0.999268, train ins_iou: 0.983223
Test 182, loss: 0.001919, test acc: 0.999084  test ins_iou: 0.998596
Learning rate: 0.000188
Train 183, loss: 0.003477, train acc: 0.998772, train ins_iou: 0.982211
Test 183, loss: 0.002161, test acc: 0.999298  test ins_iou: 0.998830
Learning rate: 0.000188
Train 184, loss: 0.003165, train acc: 0.998962, train ins_iou: 0.982606
Test 184, loss: 0.002016, test acc: 0.999359  test ins_iou: 0.998943
Learning rate: 0.000188
Train 185, loss: 0.004015, train acc: 0.998497, train ins_iou: 0.981693
Test 185, loss: 0.003277, test acc: 0.999084  test ins_iou: 0.998359
Learning rate: 0.000188
Train 186, loss: 0.003090, train acc: 0.998886, train ins_iou: 0.982406
Test 186, loss: 0.001455, test acc: 0.999420  test ins_iou: 0.999007
Learning rate: 0.000188
Train 187, loss: 0.002619, train acc: 0.999260, train ins_iou: 0.982952
Test 187, loss: 0.001980, test acc: 0.999359  test ins_iou: 0.998965
Learning rate: 0.000188
Train 188, loss: 0.003067, train acc: 0.998932, train ins_iou: 0.982450
Test 188, loss: 0.001972, test acc: 0.999268  test ins_iou: 0.998871
Learning rate: 0.000188
Train 189, loss: 0.002737, train acc: 0.999069, train ins_iou: 0.982821
Test 189, loss: 0.001036, test acc: 0.999878  test ins_iou: 0.999782
Max Acc:0.99988
Max instance iou:0.99978
former1 iou: 0.99931365
former2 iou: 0.9989696
former3 iou: 1.0
former4 iou: 1.0
former5 iou: 1.0
former6 iou: 1.0
former7 iou: 1.0
former8 iou: 1.0
former9 iou: 1.0
former10 iou: 1.0
former11 iou: 1.0
former12 iou: 0.99895054
former13 iou: 1.0
former14 iou: 1.0
former15 iou: 1.0
former16 iou: 0.99928504
Max class iou:0.99978
Learning rate: 0.000188
Train 190, loss: 0.002640, train acc: 0.999039, train ins_iou: 0.982457
Test 190, loss: 0.001323, test acc: 0.999725  test ins_iou: 0.999553
Learning rate: 0.000188
Train 191, loss: 0.002757, train acc: 0.999168, train ins_iou: 0.982954
Test 191, loss: 0.001262, test acc: 0.999603  test ins_iou: 0.999275
Learning rate: 0.000188
Train 192, loss: 0.002529, train acc: 0.999191, train ins_iou: 0.982705
Test 192, loss: 0.001861, test acc: 0.999481  test ins_iou: 0.998879
Learning rate: 0.000188
Train 193, loss: 0.002704, train acc: 0.999023, train ins_iou: 0.982889
Test 193, loss: 0.002083, test acc: 0.999451  test ins_iou: 0.999123
Learning rate: 0.000188
Train 194, loss: 0.002650, train acc: 0.999084, train ins_iou: 0.982922
Test 194, loss: 0.002327, test acc: 0.998871  test ins_iou: 0.998205
Learning rate: 0.000188
Train 195, loss: 0.003164, train acc: 0.999023, train ins_iou: 0.982480
Test 195, loss: 0.001351, test acc: 0.999573  test ins_iou: 0.999344
Learning rate: 0.000188
Train 196, loss: 0.002443, train acc: 0.999153, train ins_iou: 0.983008
Test 196, loss: 0.001504, test acc: 0.999329  test ins_iou: 0.998818
Learning rate: 0.000188
Train 197, loss: 0.003019, train acc: 0.999001, train ins_iou: 0.982813
Test 197, loss: 0.001515, test acc: 0.999542  test ins_iou: 0.999253
Learning rate: 0.000188
Train 198, loss: 0.002448, train acc: 0.999153, train ins_iou: 0.983023
Test 198, loss: 0.002400, test acc: 0.999268  test ins_iou: 0.998934
Learning rate: 0.000188
Train 199, loss: 0.003265, train acc: 0.998894, train ins_iou: 0.982484
Test 199, loss: 0.001268, test acc: 0.999725  test ins_iou: 0.999289
Learning rate: 0.000094
Train 200, loss: 0.002370, train acc: 0.999268, train ins_iou: 0.983127
Test 200, loss: 0.003236, test acc: 0.998688  test ins_iou: 0.997778
Learning rate: 0.000094
Train 201, loss: 0.002480, train acc: 0.999229, train ins_iou: 0.982957
Test 201, loss: 0.002356, test acc: 0.999298  test ins_iou: 0.998377
Learning rate: 0.000094
Train 202, loss: 0.002756, train acc: 0.999054, train ins_iou: 0.982662
Test 202, loss: 0.001743, test acc: 0.999359  test ins_iou: 0.998998
Learning rate: 0.000094
Train 203, loss: 0.002605, train acc: 0.999161, train ins_iou: 0.982996
Test 203, loss: 0.001113, test acc: 0.999756  test ins_iou: 0.999633
Learning rate: 0.000094
Train 204, loss: 0.002636, train acc: 0.999252, train ins_iou: 0.983108
Test 204, loss: 0.001412, test acc: 0.999634  test ins_iou: 0.999412
Learning rate: 0.000094
Train 205, loss: 0.002651, train acc: 0.999146, train ins_iou: 0.982981
Test 205, loss: 0.000852, test acc: 0.999908  test ins_iou: 0.999870
Max Acc:0.99991
Max instance iou:0.99987
former1 iou: 1.0
former2 iou: 1.0
former3 iou: 0.9993266
former4 iou: 1.0
former5 iou: 0.9993046
former6 iou: 1.0
former7 iou: 1.0
former8 iou: 1.0
former9 iou: 1.0
former10 iou: 1.0
former11 iou: 1.0
former12 iou: 1.0
former13 iou: 0.9992934
former14 iou: 1.0
former15 iou: 1.0
former16 iou: 1.0
Max class iou:0.99987
Learning rate: 0.000094
Train 206, loss: 0.002529, train acc: 0.999161, train ins_iou: 0.982880
Test 206, loss: 0.001398, test acc: 0.999481  test ins_iou: 0.998984
Learning rate: 0.000094
Train 207, loss: 0.002275, train acc: 0.999245, train ins_iou: 0.983203
Test 207, loss: 0.001772, test acc: 0.999420  test ins_iou: 0.999019
Learning rate: 0.000094
Train 208, loss: 0.002423, train acc: 0.999313, train ins_iou: 0.983303
Test 208, loss: 0.000943, test acc: 0.999786  test ins_iou: 0.999575
Learning rate: 0.000094
Train 209, loss: 0.002204, train acc: 0.999298, train ins_iou: 0.983414
Test 209, loss: 0.001828, test acc: 0.999359  test ins_iou: 0.998872
Learning rate: 0.000094
Train 210, loss: 0.002834, train acc: 0.999138, train ins_iou: 0.983072
Test 210, loss: 0.001353, test acc: 0.999390  test ins_iou: 0.999028
Learning rate: 0.000094
Train 211, loss: 0.002744, train acc: 0.999130, train ins_iou: 0.982916
Test 211, loss: 0.001650, test acc: 0.999512  test ins_iou: 0.999191
Learning rate: 0.000094
Train 212, loss: 0.002633, train acc: 0.999191, train ins_iou: 0.983066
Test 212, loss: 0.001076, test acc: 0.999725  test ins_iou: 0.999559
Learning rate: 0.000094
Train 213, loss: 0.002487, train acc: 0.999390, train ins_iou: 0.983251
Test 213, loss: 0.001231, test acc: 0.999695  test ins_iou: 0.999157
Learning rate: 0.000094
Train 214, loss: 0.001917, train acc: 0.999397, train ins_iou: 0.983391
Test 214, loss: 0.001869, test acc: 0.999359  test ins_iou: 0.999007
Learning rate: 0.000094
Train 215, loss: 0.002845, train acc: 0.999191, train ins_iou: 0.982902
Test 215, loss: 0.002021, test acc: 0.999054  test ins_iou: 0.998356
Learning rate: 0.000094
Train 216, loss: 0.002360, train acc: 0.999336, train ins_iou: 0.983404
Test 216, loss: 0.001428, test acc: 0.999359  test ins_iou: 0.998985
Learning rate: 0.000094
Train 217, loss: 0.002377, train acc: 0.999245, train ins_iou: 0.983258
Test 217, loss: 0.001197, test acc: 0.999664  test ins_iou: 0.999358
Learning rate: 0.000094
Train 218, loss: 0.002909, train acc: 0.999153, train ins_iou: 0.982904
Test 218, loss: 0.001398, test acc: 0.999542  test ins_iou: 0.999101
Learning rate: 0.000094
Train 219, loss: 0.001832, train acc: 0.999451, train ins_iou: 0.983408
Test 219, loss: 0.001995, test acc: 0.999298  test ins_iou: 0.998699
Learning rate: 0.000094
Train 220, loss: 0.002356, train acc: 0.999222, train ins_iou: 0.983127
Test 220, loss: 0.001264, test acc: 0.999390  test ins_iou: 0.998851
Learning rate: 0.000094
Train 221, loss: 0.002207, train acc: 0.999367, train ins_iou: 0.983513
Test 221, loss: 0.001279, test acc: 0.999481  test ins_iou: 0.999119
Learning rate: 0.000094
Train 222, loss: 0.002735, train acc: 0.999153, train ins_iou: 0.983191
Test 222, loss: 0.002058, test acc: 0.999207  test ins_iou: 0.998753
Learning rate: 0.000094
Train 223, loss: 0.002197, train acc: 0.999397, train ins_iou: 0.983447
Test 223, loss: 0.001408, test acc: 0.999573  test ins_iou: 0.999379
Learning rate: 0.000094
Train 224, loss: 0.002471, train acc: 0.999252, train ins_iou: 0.983106
Test 224, loss: 0.001566, test acc: 0.999634  test ins_iou: 0.999458
Learning rate: 0.000094
Train 225, loss: 0.002186, train acc: 0.999336, train ins_iou: 0.983178
Test 225, loss: 0.001750, test acc: 0.999451  test ins_iou: 0.999111
Learning rate: 0.000094
Train 226, loss: 0.002673, train acc: 0.999146, train ins_iou: 0.982721
Test 226, loss: 0.002353, test acc: 0.998993  test ins_iou: 0.998295
Learning rate: 0.000094
Train 227, loss: 0.002270, train acc: 0.999336, train ins_iou: 0.983306
Test 227, loss: 0.001422, test acc: 0.999573  test ins_iou: 0.999257
Learning rate: 0.000094
Train 228, loss: 0.002077, train acc: 0.999329, train ins_iou: 0.983377
Test 228, loss: 0.001374, test acc: 0.999359  test ins_iou: 0.998971
Learning rate: 0.000094
Train 229, loss: 0.002391, train acc: 0.999245, train ins_iou: 0.983261
Test 229, loss: 0.000977, test acc: 0.999725  test ins_iou: 0.999438
Learning rate: 0.000094
Train 230, loss: 0.002561, train acc: 0.999161, train ins_iou: 0.983052
Test 230, loss: 0.001210, test acc: 0.999725  test ins_iou: 0.999568
Learning rate: 0.000094
Train 231, loss: 0.002137, train acc: 0.999336, train ins_iou: 0.983362
Test 231, loss: 0.000961, test acc: 0.999695  test ins_iou: 0.999528
Learning rate: 0.000094
Train 232, loss: 0.003863, train acc: 0.998779, train ins_iou: 0.982467
Test 232, loss: 0.001419, test acc: 0.999512  test ins_iou: 0.999233
Learning rate: 0.000094
Train 233, loss: 0.002809, train acc: 0.999107, train ins_iou: 0.983081
Test 233, loss: 0.001711, test acc: 0.999451  test ins_iou: 0.999082
Learning rate: 0.000094
Train 234, loss: 0.002677, train acc: 0.999077, train ins_iou: 0.982805
Test 234, loss: 0.001466, test acc: 0.999481  test ins_iou: 0.999219
Learning rate: 0.000094
Train 235, loss: 0.002218, train acc: 0.999290, train ins_iou: 0.983285
Test 235, loss: 0.001264, test acc: 0.999481  test ins_iou: 0.999064
Learning rate: 0.000094
Train 236, loss: 0.002462, train acc: 0.999245, train ins_iou: 0.983119
Test 236, loss: 0.001934, test acc: 0.999268  test ins_iou: 0.998870
Learning rate: 0.000094
Train 237, loss: 0.002036, train acc: 0.999352, train ins_iou: 0.983336
Test 237, loss: 0.001128, test acc: 0.999725  test ins_iou: 0.999491
Learning rate: 0.000094
Train 238, loss: 0.002903, train acc: 0.999031, train ins_iou: 0.982879
Test 238, loss: 0.000938, test acc: 0.999725  test ins_iou: 0.999586
Learning rate: 0.000094
Train 239, loss: 0.002228, train acc: 0.999352, train ins_iou: 0.983312
Test 239, loss: 0.001695, test acc: 0.999420  test ins_iou: 0.999141
Learning rate: 0.000047
Train 240, loss: 0.002179, train acc: 0.999367, train ins_iou: 0.983356
Test 240, loss: 0.001733, test acc: 0.999542  test ins_iou: 0.999297
Learning rate: 0.000047
Train 241, loss: 0.003431, train acc: 0.998802, train ins_iou: 0.982505
Test 241, loss: 0.001188, test acc: 0.999695  test ins_iou: 0.999503
Learning rate: 0.000047
Train 242, loss: 0.002186, train acc: 0.999275, train ins_iou: 0.982991
Test 242, loss: 0.001571, test acc: 0.999329  test ins_iou: 0.998850
Learning rate: 0.000047
Train 243, loss: 0.002735, train acc: 0.999046, train ins_iou: 0.982678
Test 243, loss: 0.002604, test acc: 0.999176  test ins_iou: 0.998612
Learning rate: 0.000047
Train 244, loss: 0.002097, train acc: 0.999329, train ins_iou: 0.983247
Test 244, loss: 0.001323, test acc: 0.999512  test ins_iou: 0.999254
Learning rate: 0.000047
Train 245, loss: 0.002398, train acc: 0.999153, train ins_iou: 0.982823
Test 245, loss: 0.000970, test acc: 0.999664  test ins_iou: 0.999420
Learning rate: 0.000047
Train 246, loss: 0.002484, train acc: 0.999123, train ins_iou: 0.982908
Test 246, loss: 0.001048, test acc: 0.999664  test ins_iou: 0.999505
Learning rate: 0.000047
Train 247, loss: 0.002401, train acc: 0.999283, train ins_iou: 0.983232
Test 247, loss: 0.001515, test acc: 0.999664  test ins_iou: 0.999231
Learning rate: 0.000047
Train 248, loss: 0.002725, train acc: 0.998978, train ins_iou: 0.982498
Test 248, loss: 0.000960, test acc: 0.999664  test ins_iou: 0.999350
Learning rate: 0.000047
Train 249, loss: 0.002596, train acc: 0.999260, train ins_iou: 0.983007
Test 249, loss: 0.001358, test acc: 0.999542  test ins_iou: 0.999253
Learning rate: 0.000047
Train 250, loss: 0.002152, train acc: 0.999275, train ins_iou: 0.983178
Test 250, loss: 0.001490, test acc: 0.999481  test ins_iou: 0.999212
Learning rate: 0.000047
Train 251, loss: 0.002328, train acc: 0.999252, train ins_iou: 0.983237
Test 251, loss: 0.001036, test acc: 0.999603  test ins_iou: 0.999348
Learning rate: 0.000047
Train 252, loss: 0.001849, train acc: 0.999435, train ins_iou: 0.983612
Test 252, loss: 0.001131, test acc: 0.999542  test ins_iou: 0.999234
Learning rate: 0.000047
Train 253, loss: 0.002033, train acc: 0.999359, train ins_iou: 0.983313
Test 253, loss: 0.000757, test acc: 0.999756  test ins_iou: 0.999594
Learning rate: 0.000047
Train 254, loss: 0.002331, train acc: 0.999207, train ins_iou: 0.983188
Test 254, loss: 0.001037, test acc: 0.999695  test ins_iou: 0.999519
Learning rate: 0.000047
Train 255, loss: 0.002465, train acc: 0.999260, train ins_iou: 0.983211
Test 255, loss: 0.001154, test acc: 0.999695  test ins_iou: 0.999283
Learning rate: 0.000047
Train 256, loss: 0.002048, train acc: 0.999458, train ins_iou: 0.983482
Test 256, loss: 0.001694, test acc: 0.999329  test ins_iou: 0.998735
Learning rate: 0.000047
Train 257, loss: 0.002101, train acc: 0.999390, train ins_iou: 0.983478
Test 257, loss: 0.001027, test acc: 0.999634  test ins_iou: 0.999438
Learning rate: 0.000047
Train 258, loss: 0.002565, train acc: 0.999237, train ins_iou: 0.983111
Test 258, loss: 0.001939, test acc: 0.999451  test ins_iou: 0.998926
Learning rate: 0.000047
Train 259, loss: 0.001758, train acc: 0.999435, train ins_iou: 0.983526
Test 259, loss: 0.001271, test acc: 0.999756  test ins_iou: 0.999543
Learning rate: 0.000047
Train 260, loss: 0.002314, train acc: 0.999245, train ins_iou: 0.983217
Test 260, loss: 0.000911, test acc: 0.999786  test ins_iou: 0.999663
Learning rate: 0.000047
Train 261, loss: 0.002733, train acc: 0.999062, train ins_iou: 0.982757
Test 261, loss: 0.001358, test acc: 0.999481  test ins_iou: 0.999167
Learning rate: 0.000047
Train 262, loss: 0.001919, train acc: 0.999458, train ins_iou: 0.983604
Test 262, loss: 0.001356, test acc: 0.999207  test ins_iou: 0.998648
Learning rate: 0.000047
Train 263, loss: 0.002490, train acc: 0.999321, train ins_iou: 0.983303
Test 263, loss: 0.001011, test acc: 0.999542  test ins_iou: 0.999295
Learning rate: 0.000047
Train 264, loss: 0.002167, train acc: 0.999382, train ins_iou: 0.983358
Test 264, loss: 0.001578, test acc: 0.999664  test ins_iou: 0.999401
Learning rate: 0.000047
Train 265, loss: 0.002439, train acc: 0.999283, train ins_iou: 0.983100
Test 265, loss: 0.001212, test acc: 0.999756  test ins_iou: 0.999591
Learning rate: 0.000047
Train 266, loss: 0.002046, train acc: 0.999405, train ins_iou: 0.983256
Test 266, loss: 0.001493, test acc: 0.999542  test ins_iou: 0.999338
Learning rate: 0.000047
Train 267, loss: 0.002490, train acc: 0.999123, train ins_iou: 0.982855
Test 267, loss: 0.001826, test acc: 0.999451  test ins_iou: 0.999090
Learning rate: 0.000047
Train 268, loss: 0.002960, train acc: 0.998970, train ins_iou: 0.982651
Test 268, loss: 0.002600, test acc: 0.999329  test ins_iou: 0.998859
Learning rate: 0.000047
Train 269, loss: 0.002692, train acc: 0.999146, train ins_iou: 0.983068
Test 269, loss: 0.000971, test acc: 0.999847  test ins_iou: 0.999737
Learning rate: 0.000047
Train 270, loss: 0.002067, train acc: 0.999420, train ins_iou: 0.983586
Test 270, loss: 0.000977, test acc: 0.999725  test ins_iou: 0.999539
Learning rate: 0.000047
Train 271, loss: 0.001854, train acc: 0.999496, train ins_iou: 0.983737
Test 271, loss: 0.001174, test acc: 0.999695  test ins_iou: 0.999539
Learning rate: 0.000047
Train 272, loss: 0.003148, train acc: 0.999046, train ins_iou: 0.982918
Test 272, loss: 0.000933, test acc: 0.999878  test ins_iou: 0.999820
Learning rate: 0.000047
Train 273, loss: 0.002623, train acc: 0.999100, train ins_iou: 0.983000
Test 273, loss: 0.001202, test acc: 0.999725  test ins_iou: 0.999527
Learning rate: 0.000047
Train 274, loss: 0.002447, train acc: 0.999207, train ins_iou: 0.983022
Test 274, loss: 0.001143, test acc: 0.999542  test ins_iou: 0.999193
Learning rate: 0.000047
Train 275, loss: 0.002041, train acc: 0.999405, train ins_iou: 0.983385
Test 275, loss: 0.001657, test acc: 0.999451  test ins_iou: 0.999058
Learning rate: 0.000047
Train 276, loss: 0.001955, train acc: 0.999428, train ins_iou: 0.983526
Test 276, loss: 0.000988, test acc: 0.999786  test ins_iou: 0.999635
Learning rate: 0.000047
Train 277, loss: 0.002155, train acc: 0.999344, train ins_iou: 0.983429
Test 277, loss: 0.001235, test acc: 0.999664  test ins_iou: 0.999399
Learning rate: 0.000047
Train 278, loss: 0.002331, train acc: 0.999313, train ins_iou: 0.983368
Test 278, loss: 0.001065, test acc: 0.999786  test ins_iou: 0.999689
Learning rate: 0.000047
Train 279, loss: 0.002763, train acc: 0.999214, train ins_iou: 0.982957
Test 279, loss: 0.001020, test acc: 0.999695  test ins_iou: 0.999469
Learning rate: 0.000023
Train 280, loss: 0.002741, train acc: 0.999207, train ins_iou: 0.983118
Test 280, loss: 0.000982, test acc: 0.999634  test ins_iou: 0.999420
Learning rate: 0.000023
Train 281, loss: 0.001947, train acc: 0.999382, train ins_iou: 0.983474
Test 281, loss: 0.001818, test acc: 0.999451  test ins_iou: 0.998585
Learning rate: 0.000023
Train 282, loss: 0.001514, train acc: 0.999550, train ins_iou: 0.983749
Test 282, loss: 0.000891, test acc: 0.999695  test ins_iou: 0.999357
Learning rate: 0.000023
Train 283, loss: 0.001944, train acc: 0.999474, train ins_iou: 0.983668
Test 283, loss: 0.001060, test acc: 0.999634  test ins_iou: 0.999437
Learning rate: 0.000023
Train 284, loss: 0.001927, train acc: 0.999481, train ins_iou: 0.983667
Test 284, loss: 0.001096, test acc: 0.999786  test ins_iou: 0.999625
Learning rate: 0.000023
Train 285, loss: 0.002460, train acc: 0.999260, train ins_iou: 0.983349
Test 285, loss: 0.001548, test acc: 0.999481  test ins_iou: 0.999065
Learning rate: 0.000023
Train 286, loss: 0.001996, train acc: 0.999344, train ins_iou: 0.983107
Test 286, loss: 0.001674, test acc: 0.999512  test ins_iou: 0.999207
Learning rate: 0.000023
Train 287, loss: 0.001899, train acc: 0.999458, train ins_iou: 0.983569
Test 287, loss: 0.001606, test acc: 0.999268  test ins_iou: 0.998878
Learning rate: 0.000023
Train 288, loss: 0.001976, train acc: 0.999390, train ins_iou: 0.983430
Test 288, loss: 0.001857, test acc: 0.999390  test ins_iou: 0.998921
Learning rate: 0.000023
Train 289, loss: 0.002215, train acc: 0.999313, train ins_iou: 0.983229
Test 289, loss: 0.001221, test acc: 0.999603  test ins_iou: 0.999339
Learning rate: 0.000023
Train 290, loss: 0.001876, train acc: 0.999397, train ins_iou: 0.983468
Test 290, loss: 0.001153, test acc: 0.999481  test ins_iou: 0.999194
Learning rate: 0.000023
Train 291, loss: 0.002760, train acc: 0.999092, train ins_iou: 0.982873
Test 291, loss: 0.000771, test acc: 0.999878  test ins_iou: 0.999813
Learning rate: 0.000023
Train 292, loss: 0.002212, train acc: 0.999306, train ins_iou: 0.983112
Test 292, loss: 0.000926, test acc: 0.999908  test ins_iou: 0.999696
Learning rate: 0.000023
Train 293, loss: 0.002257, train acc: 0.999336, train ins_iou: 0.983111
Test 293, loss: 0.001148, test acc: 0.999481  test ins_iou: 0.999248
Learning rate: 0.000023
Train 294, loss: 0.001807, train acc: 0.999428, train ins_iou: 0.983507
Test 294, loss: 0.001340, test acc: 0.999573  test ins_iou: 0.999305
Learning rate: 0.000023
Train 295, loss: 0.002539, train acc: 0.999107, train ins_iou: 0.982914
Test 295, loss: 0.000978, test acc: 0.999756  test ins_iou: 0.999599
Learning rate: 0.000023
Train 296, loss: 0.002126, train acc: 0.999275, train ins_iou: 0.983163
Test 296, loss: 0.000959, test acc: 0.999786  test ins_iou: 0.999663
Learning rate: 0.000023
Train 297, loss: 0.002073, train acc: 0.999306, train ins_iou: 0.983290
Test 297, loss: 0.000840, test acc: 0.999817  test ins_iou: 0.999715
Learning rate: 0.000023
Train 298, loss: 0.002205, train acc: 0.999298, train ins_iou: 0.983374
Test 298, loss: 0.001151, test acc: 0.999542  test ins_iou: 0.999218
Learning rate: 0.000023
Train 299, loss: 0.001681, train acc: 0.999496, train ins_iou: 0.983612
Test 299, loss: 0.001342, test acc: 0.999542  test ins_iou: 0.999245
Learning rate: 0.000023
Train 300, loss: 0.002707, train acc: 0.999039, train ins_iou: 0.982871
Test 300, loss: 0.000862, test acc: 0.999725  test ins_iou: 0.999557
Learning rate: 0.000023
Train 301, loss: 0.002935, train acc: 0.998985, train ins_iou: 0.982711
Test 301, loss: 0.000923, test acc: 0.999725  test ins_iou: 0.999398
Learning rate: 0.000023
Train 302, loss: 0.001874, train acc: 0.999504, train ins_iou: 0.983740
Test 302, loss: 0.001321, test acc: 0.999756  test ins_iou: 0.999629
Learning rate: 0.000023
Train 303, loss: 0.001941, train acc: 0.999367, train ins_iou: 0.983329
Test 303, loss: 0.001876, test acc: 0.999512  test ins_iou: 0.999337
Learning rate: 0.000023
Train 304, loss: 0.002737, train acc: 0.999069, train ins_iou: 0.982975
Test 304, loss: 0.001038, test acc: 0.999725  test ins_iou: 0.999592
Learning rate: 0.000023
Train 305, loss: 0.002138, train acc: 0.999336, train ins_iou: 0.983283
Test 305, loss: 0.001217, test acc: 0.999573  test ins_iou: 0.999163
Learning rate: 0.000023
Train 306, loss: 0.001616, train acc: 0.999519, train ins_iou: 0.983629
Test 306, loss: 0.001501, test acc: 0.999512  test ins_iou: 0.999223
Learning rate: 0.000023
Train 307, loss: 0.002146, train acc: 0.999367, train ins_iou: 0.983390
Test 307, loss: 0.001390, test acc: 0.999695  test ins_iou: 0.999558
Learning rate: 0.000023
Train 308, loss: 0.001927, train acc: 0.999466, train ins_iou: 0.983616
Test 308, loss: 0.000960, test acc: 0.999817  test ins_iou: 0.999708
Learning rate: 0.000023
Train 309, loss: 0.001650, train acc: 0.999588, train ins_iou: 0.983861
Test 309, loss: 0.000914, test acc: 0.999664  test ins_iou: 0.999175
Learning rate: 0.000023
Train 310, loss: 0.002050, train acc: 0.999359, train ins_iou: 0.983381
Test 310, loss: 0.000902, test acc: 0.999756  test ins_iou: 0.999520
Learning rate: 0.000023
Train 311, loss: 0.002329, train acc: 0.999245, train ins_iou: 0.983207
Test 311, loss: 0.001003, test acc: 0.999573  test ins_iou: 0.999217
Learning rate: 0.000023
Train 312, loss: 0.001818, train acc: 0.999489, train ins_iou: 0.983764
Test 312, loss: 0.001985, test acc: 0.999146  test ins_iou: 0.998243
Learning rate: 0.000023
Train 313, loss: 0.001973, train acc: 0.999443, train ins_iou: 0.983630
Test 313, loss: 0.001526, test acc: 0.999664  test ins_iou: 0.999144
Learning rate: 0.000023
Train 314, loss: 0.002087, train acc: 0.999397, train ins_iou: 0.983373
Test 314, loss: 0.001073, test acc: 0.999786  test ins_iou: 0.999672
Learning rate: 0.000023
Train 315, loss: 0.002478, train acc: 0.999229, train ins_iou: 0.983039
Test 315, loss: 0.001065, test acc: 0.999634  test ins_iou: 0.999345
Learning rate: 0.000023
Train 316, loss: 0.001825, train acc: 0.999458, train ins_iou: 0.983666
Test 316, loss: 0.001041, test acc: 0.999817  test ins_iou: 0.999719
Learning rate: 0.000023
Train 317, loss: 0.001705, train acc: 0.999489, train ins_iou: 0.983323
Test 317, loss: 0.001094, test acc: 0.999634  test ins_iou: 0.999287
Learning rate: 0.000023
Train 318, loss: 0.002155, train acc: 0.999321, train ins_iou: 0.983322
Test 318, loss: 0.000931, test acc: 0.999756  test ins_iou: 0.999631
Learning rate: 0.000023
Train 319, loss: 0.002258, train acc: 0.999252, train ins_iou: 0.983413
Test 319, loss: 0.001549, test acc: 0.999390  test ins_iou: 0.998848
Learning rate: 0.000012
Train 320, loss: 0.001720, train acc: 0.999474, train ins_iou: 0.983451
Test 320, loss: 0.000754, test acc: 0.999847  test ins_iou: 0.999594
Learning rate: 0.000012
Train 321, loss: 0.002146, train acc: 0.999290, train ins_iou: 0.983418
Test 321, loss: 0.001382, test acc: 0.999634  test ins_iou: 0.999377
Learning rate: 0.000012
Train 322, loss: 0.002334, train acc: 0.999168, train ins_iou: 0.983070
Test 322, loss: 0.001494, test acc: 0.999542  test ins_iou: 0.999174
Learning rate: 0.000012
Train 323, loss: 0.002203, train acc: 0.999344, train ins_iou: 0.983057
Test 323, loss: 0.001316, test acc: 0.999298  test ins_iou: 0.998100
Learning rate: 0.000012
Train 324, loss: 0.002180, train acc: 0.999359, train ins_iou: 0.983372
Test 324, loss: 0.000741, test acc: 0.999817  test ins_iou: 0.999722
Learning rate: 0.000012
Train 325, loss: 0.002416, train acc: 0.999168, train ins_iou: 0.982963
Test 325, loss: 0.001482, test acc: 0.999542  test ins_iou: 0.999311
Learning rate: 0.000012
Train 326, loss: 0.002561, train acc: 0.999268, train ins_iou: 0.983128
Test 326, loss: 0.001077, test acc: 0.999695  test ins_iou: 0.999535
Learning rate: 0.000012
Train 327, loss: 0.001874, train acc: 0.999413, train ins_iou: 0.983520
Test 327, loss: 0.001708, test acc: 0.999573  test ins_iou: 0.999342
Learning rate: 0.000012
Train 328, loss: 0.002222, train acc: 0.999237, train ins_iou: 0.983057
Test 328, loss: 0.001348, test acc: 0.999359  test ins_iou: 0.998968
Learning rate: 0.000012
Train 329, loss: 0.001823, train acc: 0.999428, train ins_iou: 0.983477
Test 329, loss: 0.001425, test acc: 0.999634  test ins_iou: 0.999439
Learning rate: 0.000012
Train 330, loss: 0.002058, train acc: 0.999344, train ins_iou: 0.983107
Test 330, loss: 0.001224, test acc: 0.999451  test ins_iou: 0.999075
Learning rate: 0.000012
Train 331, loss: 0.002192, train acc: 0.999290, train ins_iou: 0.983384
Test 331, loss: 0.001423, test acc: 0.999512  test ins_iou: 0.999241
Learning rate: 0.000012
Train 332, loss: 0.002171, train acc: 0.999344, train ins_iou: 0.983402
Test 332, loss: 0.002039, test acc: 0.999237  test ins_iou: 0.998648
Learning rate: 0.000012
Train 333, loss: 0.001822, train acc: 0.999496, train ins_iou: 0.983627
Test 333, loss: 0.001041, test acc: 0.999695  test ins_iou: 0.999555
Learning rate: 0.000012
Train 334, loss: 0.002107, train acc: 0.999397, train ins_iou: 0.983342
Test 334, loss: 0.000940, test acc: 0.999756  test ins_iou: 0.999138
Learning rate: 0.000012
Train 335, loss: 0.002156, train acc: 0.999321, train ins_iou: 0.983211
Test 335, loss: 0.001488, test acc: 0.999329  test ins_iou: 0.998909
Learning rate: 0.000012
Train 336, loss: 0.002002, train acc: 0.999435, train ins_iou: 0.983482
Test 336, loss: 0.000936, test acc: 0.999786  test ins_iou: 0.999630
Learning rate: 0.000012
Train 337, loss: 0.001628, train acc: 0.999542, train ins_iou: 0.983669
Test 337, loss: 0.001419, test acc: 0.999451  test ins_iou: 0.998982
Learning rate: 0.000012
Train 338, loss: 0.002056, train acc: 0.999405, train ins_iou: 0.983405
Test 338, loss: 0.000838, test acc: 0.999847  test ins_iou: 0.999762
Learning rate: 0.000012
Train 339, loss: 0.002259, train acc: 0.999298, train ins_iou: 0.983239
Test 339, loss: 0.000867, test acc: 0.999878  test ins_iou: 0.999828
Learning rate: 0.000012
Train 340, loss: 0.001738, train acc: 0.999458, train ins_iou: 0.983502
Test 340, loss: 0.001795, test acc: 0.999329  test ins_iou: 0.998953
Learning rate: 0.000012
Train 341, loss: 0.002001, train acc: 0.999336, train ins_iou: 0.983333
Test 341, loss: 0.000613, test acc: 0.999878  test ins_iou: 0.999825
Learning rate: 0.000012
Train 342, loss: 0.001897, train acc: 0.999481, train ins_iou: 0.983553
Test 342, loss: 0.001705, test acc: 0.999725  test ins_iou: 0.999558
Learning rate: 0.000012
Train 343, loss: 0.001833, train acc: 0.999443, train ins_iou: 0.983647
Test 343, loss: 0.000991, test acc: 0.999725  test ins_iou: 0.999563
Learning rate: 0.000012
Train 344, loss: 0.002356, train acc: 0.999207, train ins_iou: 0.983023
Test 344, loss: 0.001195, test acc: 0.999512  test ins_iou: 0.999199
Learning rate: 0.000012
Train 345, loss: 0.001995, train acc: 0.999352, train ins_iou: 0.983226
Test 345, loss: 0.001307, test acc: 0.999695  test ins_iou: 0.999461
Learning rate: 0.000012
Train 346, loss: 0.001950, train acc: 0.999390, train ins_iou: 0.983433
Test 346, loss: 0.001269, test acc: 0.999786  test ins_iou: 0.999678
Learning rate: 0.000012
Train 347, loss: 0.002323, train acc: 0.999290, train ins_iou: 0.983329
Test 347, loss: 0.001379, test acc: 0.999695  test ins_iou: 0.999399
Learning rate: 0.000012
Train 348, loss: 0.001787, train acc: 0.999489, train ins_iou: 0.983561
Test 348, loss: 0.001109, test acc: 0.999603  test ins_iou: 0.999148
Learning rate: 0.000012
Train 349, loss: 0.002619, train acc: 0.999092, train ins_iou: 0.982752
Test 349, loss: 0.001093, test acc: 0.999573  test ins_iou: 0.999368
Learning rate: 0.000012
Train 350, loss: 0.001725, train acc: 0.999504, train ins_iou: 0.983565
Test 350, loss: 0.001439, test acc: 0.999512  test ins_iou: 0.999159
Final Max Acc:0.99991
Final Max instance iou:0.99987
Final Max class iou:0.99987
